/* /////////////////////////////////////////////////////// */
/* /////////////////////////////////////////////////////// */
/* Animation and element movements in CSS3 */
/* /////////////////////////////////////////////////////// */
/* /////////////////////////////////////////////////////// */

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
/* .container{
    position: relative;
    width: 100vw;
    height: 100vh;
} */

.div1 {
  width: 100px;
  height: 100px;
  background-color: violet;
  margin-top: 5px;

  position: relative;

  animation: div1-animation 2s ease-in-out 0s infinite alternate;

  /* 
    animation: name duration timing-func delay iteration direction;
*/
}
@keyframes div1-animation {
  0% {
    background-color: violet;
    left: 0px;
    top: 0px;
  }
  100% {
    background-color: aqua;
    left: calc(100vw - 100px);
    top: 0px;
  }
}

.div2 {
  width: 100px;
  height: 100px;
  background-color: black;
  margin-top: 5px;

  position: relative;
  float: right;

  animation: div2-animation 2s ease-in-out 0s infinite alternate;
}
@keyframes div2-animation {
  0% {
    background-color: black;
    right: 0px;
    top: 0px;
  }
  100% {
    background-color: chartreuse;
    right: calc(100vw - 100px);
    top: 0px;
  }
}

.div3 {
  width: 100px;
  height: 100px;
  background-color: black;
  margin-top: 5px;

  position: relative;
  left: 220px;
  top: -105px;

  animation: div3-animation 1s ease-in-out 0s infinite alternate;
}

@keyframes div3-animation {
  from {
    top: -105px;
  }
  to {
    top: calc(100vh - 210px);
  }
}

/* /////////////////////////////////////////////////////////////////////////////// */

/* Aniamtion Summary:
    @keyframes identifier_name: what happens during the animation.

    animation properties:
    {
        animation-name: use it to bend the animation to the element.

        animation-duration: total time of the animation in sec.

        animation-timing-func: the speed curve of the animation   
                [   ease: slow start, then fast, then slow end.
                    linear: same speed fro start to end.
                    ease-in: slow start then normal speed.
                    ease-out: normal spped then slow end.
                    ease-in-out: slow start then normal speed then slow end.
                    cubic-bezier(n,n,n,n):
                ]

        animation-delay: time before the animation starts in sec.

        animation-iteration-count: the number of repetetion [a number, infinte].

        animation-direction: [forward,    reverse,    alternate,  alternate-reverse]

        animation-fill-mode: allow the element to retain the style of the animation before or after:
                    This property doesn't affect how the animation plays - just what happens before and after!.
                    [
                        none: Like an actor who only performs during the show, then goes home.
                        forward: Actor freezes in their final pose when the show ends.
                        backword: Actor starts in their opening pose before the show begins.
                        both: Actor is always in character - either starting pose (before) or final pose (after)
                    ]
                    when to use: 
                    [
                        Use "forwards" when you want an element to stay changed after animating.
                        Use "backwards" when you want the animation style applied immediately (before delay).
                        Use "both" for seamless transitions with delays.
                        Use "none" when you want complete reversion.
                    ]
        animation-play-state: "running" or "paused"
                    [
                        case of use:
                            -pause on hover.
                            -toggle on click() using js-code.
                            -pause animation when tab is inactive.
                            -animate elements when they come into view.
                            
                    ]
    }
*/
